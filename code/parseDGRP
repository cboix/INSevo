#!/bin/bash
# Variables:
PREFIX=/net/home/carlesba
fidx=$PREFIX/db/DGRP/fidx.vcf
fvcf=$PREFIX/db/DGRP/f.vcf

#For running parallel jobs:
if [ "$1" == "" ]
then {
    TARGETS=$PREFIX/project/dmel_targets
    div=$PREFIX/project/divergence/DGRPdiv
} elif [ "$1" == "CONTROL" ] 
then {
    TARGETS=$PREFIX/project/random_targets
    div=$PREFIX/project/divergence/DGRPdivcontrol
} else {
    TARGETS=$1
} fi

# Folders:
mkdir -p $PREFIX/db/DGRP
mkdir -p $PREFIX/db/DGRP/indexedgenes
mkdir -p $PREFIX/db/DGRP/fullgenes
mkdir -p $PREFIX/project/divergence

# <+1+> Take correct lines from the indexed DGRP vcf file for each target gene:
echo "Start indexing..."
while read -r p
do
    eval $( echo $p | awk '{printf("GENE=%s; CHR=%s; Start=%s; End=%s;",$1,$2,$5,$6)}' )
    out=$PREFIX/db/DGRP/indexedgenes/$GENE\_idx.vcf
    if [[ ! -s $out ]]
    then {
        echo "Grabbing indexes for $GENE"
        awk -v chr=$CHR -v st=$Start -v end=$End '$2 == chr && $3 >= st && $3 <= end' $fidx > $out
    } fi
done < $TARGETS
echo "Indexes done."

# Check that the index files were created:
emptyig=$(ls -sh ~/db/DGRP/indexedgenes | head -n 1 | awk '{print $2}')
if [[ $emptyig != "0" ]]
then {
    #Create the index files:
    echo "Populating index files with SNP information."; #NOTE DO NOT REINITIALIZE IF SPLITTING DMEL_TARGETS!
    while read -r p
    do
        eval $( echo $p | awk '{printf("GENE=%s",$1)}' ) 

        idxfile=$PREFIX/db/DGRP/indexedgenes/$GENE\_idx.vcf
        SNP=$PREFIX/db/DGRP/fullgenes/$GENE\_SNP
        tmpSNP=$PREFIX/db/DGRP/fullgenes/$GENE\_tmpSNP
        divSNP=$PREFIX/db/DGRP/fullgenes/$GENE\_divSNP
        
        # Only execute if this is relevant (does not exist)
        if [[ ! -s $SNP || ! -s $divSNP ]] 
        then {

            echo "Creating SNP file for $GENE"

            # Get indexes of start and end of the file:
            eval $( awk 'NR==1{c=$1}END{d=$1; printf("Start=%s; End=%s",c,d)}' $idxfile )

            # Create the full file by cutting out relevant parts w/ sed. Also trim out the . and replace w/ 0s.
            sed -n "$Start"','"$End"'p;' $fvcf | awk '{gsub(/[A-Z]*:[0-9:A-Z]*:[A-Z]*/,"\t",$0); gsub(/[0-9]*\//,"",$0); print}' | awk ' $0 ~/SY/{print "0",$0} $0 ~/NS/{print "1",$0}' | tr . 0 > $tmpSNP
           
            # Create SNP data (to be used by Tajima's D test):
            awk '{print $3}'  $tmpSNP | sort | uniq -c | join -1 2 -2 3 - $tmpSNP | awk '{printf("%s %s %s %s %s %s %s %s %s",$3,$4,$1,$5,$6,$7,$8,$9,$10); for(i=11;i <=NF; i++){a=(i%2==0?$i:$i/$2);printf(" %s",a);} printf("\n",2);}' > $SNP
    
            # Count SNPs for the divSNP files:
            awk '{qual= 0;count=0;no = 0;allele=0; for(i=10;i <=NF; i= i+2){a = i+1; if($i ~ /\./ || $a < 20){no = no +1}; if(($i == 1 || $i == 0) && $a >= 20){count=count+1;qual = qual + $a}; if($i > 0 && $a >= 20){allele = allele + $i;}}; print allele,qual/count,count,no,no+count,$9;}' $SNP > $divSNP
    
    } fi
            # Counts of all divergence data. Is done regardless of DOALL value:
            awk -v gene=$GENE 'BEGIN{sy=0;ns=0;} $0 ~ /SY/{sy=sy+1}$0 ~/NS/{ns=ns+1}END{print gene,sy,ns }' $divSNP >> $div

    rm -f $tmpSNP

    done < $TARGETS
    echo "Done creating SNP files for both MK testing and Tajima's D."
} fi

if [[ "$1" == "" || "$1" == "CONTROL" ]]
then {
    #CAN'T merge if not sorted:
    sort -u $div | sort +0 -1 > $PREFIX/project/tmp
    cat $PREFIX/project/tmp > $div
    rm $PREFIX/project/tmp
} fi

# TODO put together the non-coding sequence!
# WE CAN ACTUALLY NOW do this directly to the yakuba genes!
## Put together coding seq if it doesn't exist:
#UTR=$PREFIX/db/Annotation/utr-r5.33
#
#if [[ ! -s $UTR ]]
#then { awk '$2 ~ /FlyBase/ && $3 ~ /UTR/{gsub(";"," ",$0); gsub("Name="," ",$0); gsub("Name=","n;",$0); print $1,$3,$4,$5,$10}'  $PREFIX/db/Annotation/dmel-all-r5.33.gff | awk '{gsub(/\(/,"_",$0); gsub(/\)/,"_",$0); print $0}' > $UTR
#    }
#fi
#
##NEEDED to compare the simulans divergences with the DGRP divergences.
#while read -r p
#do
#    eval $( echo $p | awk '{printf("GENE=%s;",$1)}' )
#    INutr=$PREFIX/db/DGRP/indexedgenes/$GENE\_idx.vcf
#    OUTutr=$PREFIX/db/DGRP/indexedgenes/$GENE\_num
#
#    if [[ ! -s $OUTutr ]]
#    then {
#        eval $( awk -v gene=$GENE '$5 ~ gene' $UTR | sort -u | awk '{a=(a?(a<$3?a:$3):$3); a=(a?(a<$4?a:$4):$4); b=(b?(b>$3?b:$3):$3); b=(b?(b>$4?b:$4):$4);}END{printf("ST=%s; EN=%s;",a,b)}' )
#        #Work from idx.vcf! and create small list of numbers.
#        awk -v st=$ST -v end=$EN '$0 ~ /SY/ || $0 ~ /NS/{a = $3 - st + 1; print $2,a,$4}' $INutr > $OUTutr
#    } fi
#
#done < $TARGETS
