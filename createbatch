#!/bin/bash
#Create batch files. This file should be in ~/code/createbatch:
mkdir -p ~/db/DGRP
#CHECK that we have the DGRP data files: 

#if [[ ! -e ~/db/DGRP/fidx.vcf || ! -e ~/db/DGRP/f.vcf ]] ; then {
#     if [ ! -e ~/db/DGRP/f.vcf ] ; then {
#		echo "Download freeze2.vcf from DGRP:"
#		wget http://www.hgsc.bcm.tmc.edu/projects/dgrp/freeze2_Feb_2013/vcf_files/freeze2.vcf.gz
#		gunzip ./freeze2.vcf.gz
#		mv ./freeze2.vcf ~/db/DGRP/f.vcf }  fi
#awk '$1 !~ /#/ {print NR,$1, $2,$8}' ~/db/DGRP/f.vcf > ~/db/DGRP/fidx.vcf
#}
#fi

#--------First Batch set: Creation of idx gene files----------------------
TAR=~/project/dmel_targets
BATCH=~/db/DGRP/batchbychr
echo "#!/bin/bash" > $BATCH
mkdir -p ~/db/DGRP/indexedgenes
#An awk program that writes an awk program:
#This uses the INDEXED (and reduced) version of the vcf!
echo "#Awk program to pick out SNPs of interest (from the dmel_targets genes):" >> $BATCH
awk '{a=sprintf("~/db/DGRP/indexedgenes/%s_recode.vcf",$1);b=sprintf("\"%s\"",$2); print "awk \x27 $2 ==",b,"&& $3 >=",$5,"&& $3 <=",$6,"\x27 ~/db/DGRP/fidx.vcf >",a}' $TAR >> $BATCH

#Enable execution and (execute if it has not been done yet?)
chmod +x $BATCH
#qsub -clear -cwd -N batch_chr -b y ./$BATCH

#-----------Second Batch set: Population of index files--------------------
#Creates a set of awk scripts that will populate the index files of genes with the right population data. 

#CHECK: Here you must have run the $BATCH command first!
emptyig=$(ls -sh ~/db/DGRP/indexedgenes | head -n 1 | awk '{print $2}')
if [[ $emptyig != "0" ]]
then
	{
CR2=~/code/crpop
POP=~/code/populate
echo "#!/bin/bash" > $CR2;
echo "#!/bin/bash" > $POP;
mkdir -p ~/db/DGRP/fullgenes;
awk '{a=sprintf("~/db/DGRP/indexedgenes/%s_recode.vcf",$1); b=sprintf("\"~/db/DGRP/fullgenes/%s_full.vcf\"",$1); print "awk \x27 NR==1{c=$1}END{d=$1;e=sprintf(\"\\x27%s,%sp;\\x27\",c,d); print \"sed -n\",e,\" ~/db/DGRP/f.vcf | awk \\x27{gsub(/[A-Z]*:[0-9:A-Z]*:[A-Z]*/,\\\"\\\\t\\\",$0); gsub(/[0-9]*\\\\//,\\\"\\\",$0); print}\\x27 >\",",b,"}\x27",a," >> ~/code/populate"}' $TAR > $CR2;

#Executability and create populate from $CR2:
chmod +x $CR2;
$CR2;

echo -e "\n#Setting all nonreads to 0, and NO threshold, for Tajima's D:" >> $POP

awk '{ina=sprintf("~/db/DGRP/fullgenes/%s_full.vcf",$1); out=sprintf("~/db/DGRP/fullgenes/%s_SNP",$1); print "awk \x27 $0 ~/SY/{print \"0\",$0} $0 ~/NS/{print \"1\",$0}\x27 ",ina,"| tr . 0 >",out}' $TAR >> $POP

echo -e "With a threshold of 20 = read quality, we pick out the reads and print allele count, avg. quality, sequences used, not used, and total for divergence tests" >> $POP
awk '{ina=sprintf("~/db/DGRP/fullgenes/%s_full.vcf",$1); out=sprintf("~/db/DGRP/fullgenes/%s_divSNP",$1); print "awk \x27$0 ~/SY/ || $0 ~/NS/{qual= 0;count=0;no = 0;allele=0;for(i=9;i <=NF; i= i+2){a = i+1; if($i ~ /\\./ || $a < 20){no = no +1}; if(($i == 1 || $i == 0) && $a >= 20){count=count+1;qual = qual + $a}; if($i == 1 && $a >= 20){allele = allele + $i;}}; print allele,qual/count,count,no,no+count,$8;}\x27 ",ina,">",out}' $TAR >> $POP

echo "" > ~/project/divergence/DGRPdiv
awk '{ina=sprintf("~/db/DGRP/fullgenes/%s_divSNP",$1); pri=sprintf("\"%s\",sy,ns",$1); print "awk \x27 BEGIN{sy=0;ns=0;} $0 ~ /SY/{sy=sy+1}$0 ~/NS/{ns=ns+1}END{print",pri,"}\x27",ina,">> ~/project/divergence/DGRPdiv"}' $TAR >> $POP

echo "awk '{print \$1,\$2,\$3}' ~/project/divergence/allsimdiv | join - ~/project/divergence/DGRPdiv > ~/project/divergence/fulldiv" >> $POP

chmod +x $POP;
}
fi
#$POP
